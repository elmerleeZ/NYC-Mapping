legend.hist.height=.15,
legend.hist.bg.color="gray60",
legend.hist.bg.alpha=.5) +
tm_shape(tract[tract$tract == 177, ]) +
tm_fill(col = "white") +
tm_shape(tract[tract$tract == 177, ]) +
tm_fill(col = "forestgreen", alpha = .6) + tm_borders() +
tm_layout(main.title = NA,
main.title.size = 2.2, fontfamily = "sans", main.title.position = 0.03)
}
tm_plot(tract,'tot_pop_2010') + save_tmap(filename = "/Users/zongyangli/Desktop/Total Population in 2010.png", width = 6.5, height = 8, dpi = 700)
tm_plot(tract,'tot_pop_2010')
?save_tmap
tm_plot(tract,'tot_pop_2010')
tm_plot(tract,'tot_pop_2010') + save_tmap(filename = "/Users/zongyangli/Desktop/Total Population in 2010.png", width = 6.5, height = 8, dpi = 700)
library(acs)
library(acsplus)
library(dplyr)
library(readxl)
library(tidycensus)
variables <- c(
acs_vars("B01003",1), # Total Population
acs_vars("B11001",1), # Num Household
acs_vars("B01002",1), # Num Median Age
acs_vars("B02008",1), # Num White
acs_vars("B02009",1), # Num Black
acs_vars("B02011",1), # Num Asian
acs_vars("B03003",3), # Num Hispanic
acs_vars("B15003",17:25), # Educational Attanment - high school and above
acs_vars("B19013",1), # Median Household Income in past 12 months
acs_vars("B25064",1) # Median Gross Rent
)
## Get Data
acs_raw <- get_acs(geography = 'public use microdata area', state = '36', variables = variables, survey = "acs1", endyear = 2016)
## Clean data
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
names(acs_clean) <- c('geoid',
'neighborhood',
'tot_pop',
'tot_hh',
'num_white',
'num_black',
'num_asian',
'num_hispanic',
'num_hs_diploma',
'num_hs_ged',
'num_clg_1yr',
'num_clg_1yr_more',
'num_associate',
'num_bachelor',
'num_master',
'num_professional',
'num_doctor',
'med_hhincome',
'rent_median')
library(dplyr)
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
library(tidyr)
queens_clean <- acs_clean %>%
dplyr::mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
names(acs_clean) <- c('geoid',
'neighborhood',
'tot_pop',
'tot_hh',
'num_white',
'num_black',
'num_asian',
'num_hispanic',
'num_hs_diploma',
'num_hs_ged',
'num_clg_1yr',
'num_clg_1yr_more',
'num_associate',
'num_bachelor',
'num_master',
'num_professional',
'num_doctor',
'med_hhincome',
'rent_median')
queens_clean <- acs_clean %>%
dplyr::mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
remove.packages("dplyr")
install.packages("dplyr")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
queens_clean <- acs_clean %>%
dplyr::mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
census_api_key("1d9149a1d6d2eb5c7cfbc7dd7c74d092c415a8a8", install = T)
library(dplyr)
?mutate
mtcars %>% as_tibble() %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
mtcars <- mtcars %>% as_tibble() %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
View(mtcars)
?mutate
library(acs)
?mutate
detach("package:acs", unload=TRUE)
library(acsplus)
?mutate
mtcars <- mtcars %>% as_tibble() %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
library(acs)
library(acsplus)
library(dplyr)
library(tidyr)
library(readxl)
library(tidycensus)
mtcars <- mtcars %>% as_tibble() %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
## Specify variables
variables <- c(
acs_vars("B01003",1), # Total Population
acs_vars("B11001",1), # Num Household
acs_vars("B01002",1), # Num Median Age
acs_vars("B02008",1), # Num White
acs_vars("B02009",1), # Num Black
acs_vars("B02011",1), # Num Asian
acs_vars("B03003",3), # Num Hispanic
acs_vars("B15003",17:25), # Educational Attanment - high school and above
acs_vars("B19013",1), # Median Household Income in past 12 months
acs_vars("B25064",1) # Median Gross Rent
)
## Get Data
acs_raw <- get_acs(geography = 'public use microdata area', state = '36', variables = variables, survey = "acs1", endyear = 2016)
## Clean data
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
names(acs_clean) <- c('geoid',
'neighborhood',
'tot_pop',
'tot_hh',
'num_white',
'num_black',
'num_asian',
'num_hispanic',
'num_hs_diploma',
'num_hs_ged',
'num_clg_1yr',
'num_clg_1yr_more',
'num_associate',
'num_bachelor',
'num_master',
'num_professional',
'num_doctor',
'med_hhincome',
'rent_median')
queens_clean <- acs_clean %>%
dplyr::mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
mtcars <- mtcars %>% as_tibble() %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
mtcars <- mtcars  %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
queens_clean <- acs_clean
queens_clean <- acs_clean %>%
dplyr::mutate(
pct_white = num_white/tot_pop)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
mtcars <- mtcars  %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
queens_clean <- acs_clean %>%
mutate(pct_white = num_white)
queens_clean <- acs_clean %>%
mutate(
pct_white = (num_white/tot_pop))
typeof(acs_clean$num_white)
typeof(acs_clean$tot_pop)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white*tot_pop))
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white*tot_pop)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white * tot_pop)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white * 2)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white * 2)
mtcars <- mtcars  %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
?mutate
queens_clean <- queens_clean %>%
mutate(
pct_white = num_white * 2)
View(acs_clean)
View(acs_clean)
View(acs_raw)
View(acs_clean)
acs_clean <- acs_clean %>%
mutate(test = tot_pop + tot_hh)
library(dplyr)
?mutate
library(acsplus)
?mutate
library(tidyr)
library(tidyr)
?mutate
library(readxl)
library(tidycensus)
?mutate
## Specify variables
variables <- c(
acs_vars("B01003",1), # Total Population
acs_vars("B11001",1), # Num Household
acs_vars("B01002",1), # Num Median Age
acs_vars("B02008",1), # Num White
acs_vars("B02009",1), # Num Black
acs_vars("B02011",1), # Num Asian
acs_vars("B03003",3), # Num Hispanic
acs_vars("B15003",17:25), # Educational Attanment - high school and above
acs_vars("B19013",1), # Median Household Income in past 12 months
acs_vars("B25064",1) # Median Gross Rent
)
?acs_vars
acs_raw <- get_acs(geography = 'public use microdata area', state = '36', variables = variables, survey = "acs1", endyear = 2016)
## Clean data
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
?mutate
names(acs_clean) <- c('geoid',
'neighborhood',
'tot_pop',
'tot_hh',
'num_white',
'num_black',
'num_asian',
'num_hispanic',
'num_hs_diploma',
'num_hs_ged',
'num_clg_1yr',
'num_clg_1yr_more',
'num_associate',
'num_bachelor',
'num_master',
'num_professional',
'num_doctor',
'med_hhincome',
'rent_median')
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
mtcars <- mtcars  %>% mutate(
cyl2 = cyl * 2,
cyl4 = cyl2 * 2
)
View(mtcars)
mtcars <- mtcars  %>% mutate(
cyl2 = cyl * disp)
acs_clean <- as.data.frame(acs_clean)
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
) %>%
select(geoid,neighborhood,tot_pop,tot_hh,med_hhincome,starts_with('pct'),everything())
queens_clean <- acs_clean %>%
mutate(
pct_white = num_white/tot_pop,
pct_black = num_black/tot_pop,
pct_asian = num_asian/tot_pop,
pct_hispanic = num_hispanic/tot_pop,
pct_high_sch_higher = (num_hs_diploma+num_hs_ged+num_clg_1yr+num_clg_1yr_more+num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop,
pct_college_degree = (num_associate+num_bachelor+num_master+num_professional+num_doctor)/tot_pop
)
View(acs_clean)
View(acs_raw)
acs_clean <- acs_raw %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
filter(GEOID %in% c('3604101','3604109','3604102'))
View(acs_raw)
View(acs_clean)
colnames(acs_clean)
source("/Users/zongyangli/Documents/Github/R-Key-functions/Start up.R")
library(rnaturalearth)
library(tmap)
library(osmar)
library(OpenStreetMap)
library(ggmap)
library(tmaptools)
library(rgdal)
library(broom)
library(rgeos)
library(readxl)
library(Cairo) #font
tract_origin <- readOGR(dsn = path.expand("/Users/zongyangli/Google Drive/Job/RA - Public Good/Data/Shape files/tract_shape_files"), layer = "nyct2010")
tract <- readOGR(dsn = path.expand("/Users/zongyangli/Google Drive/Job/RA - Public Good/Data/Shape files/zip_shape_files"))
zip_focus <- c(10002, 11201, 11204, 11205, 11207, 11209, 11210, 11211, 11213, 11214, 11215, 11216, 11217, 11218, 11220, 11221, 11222, 11223, 11225, 11226, 11230, 11231, 11233, 11234, 11235, 11236, 11238, 11243, 11249)
uja_brooklyn_response <- read.csv("/Users/zongyangli/Google Drive/Job/RA - Public Good/Projects/UJA_Brooklyn/Survey/brooklyn_response_zip_frequency.csv") %>% mutate(zip = as.numeric(zip))
uja_brooklyn_response <- read.csv("/Users/zongyangli/Google Drive/Job/RA - Public Good/Projects/UJA_Brooklyn/Survey/brooklyn_response_zip.csv") %>% mutate(zip = as.numeric(zip))
meta <- tract@data
colnames(meta)[1] <- "zip"
View(meta)
uja_brooklyn_response <- read.csv("/Users/zongyangli/Google Drive/Job/RA - Public Good/Projects/UJA_Brooklyn/Survey/brooklyn_response_zip.csv") %>% mutate(zip = as.numeric(zip))
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
meta$zip <- as.numeric.factor(meta$zip)
meta <- meta %>% left_join(uja_brooklyn_response[,c('zip','frequency','neighborhood')], by = "zip")
tract@data <- meta
tm_plot <- function(tract,var){
tm_shape(tract[tract$zip %in% zip_focus,]) + tm_borders(col = "black") +
tm_polygons(col = var, palette = "Blues", alpha = .9) +
tm_layout(legend.text.size=0.8,
legend.title.size=.001,
legend.position = c("left","top"),
legend.bg.color = "gray100",
legend.bg.alpha=.2,
legend.frame='gray100',
legend.height= 2,
legend.width = 2,
legend.hist.width=.15,
legend.hist.height=.15,
legend.hist.bg.color="gray60",
legend.hist.bg.alpha=.5) +
tm_shape(tract[tract$zip == 11212,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11203,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11228,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11229,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11219, ]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_layout(main.title = NA,
main.title.size = 1.8, fontfamily = "sans", main.title.position = 0.13)
}
tm_plot(tract,'frequency') # (8.71*5.54 inch)
zip_focus <- c(11213, 11226, 11225, 11218, 11231, 11216, 11217, 11201, 11238, 11215)
tm_plot <- function(tract,var){
tm_shape(tract[tract$zip %in% zip_focus,]) + tm_borders(col = "black") +
tm_polygons(col = var, palette = "Blues", alpha = .9) +
tm_layout(legend.text.size=0.8,
legend.title.size=.001,
legend.position = c("left","top"),
legend.bg.color = "gray100",
legend.bg.alpha=.2,
legend.frame='gray100',
legend.height= 2,
legend.width = 2,
legend.hist.width=.15,
legend.hist.height=.15,
legend.hist.bg.color="gray60",
legend.hist.bg.alpha=.5) +
tm_shape(tract[tract$zip == 11212,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11203,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11228,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11229,]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_shape(tract[tract$zip == 11219, ]) +
tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_layout(main.title = NA,
main.title.size = 1.8, fontfamily = "sans", main.title.position = 0.13)
}
tm_plot(tract,'frequency') # (8.71*5.54 inch)
tm_plot <- function(tract,var){
tm_shape(tract[tract$zip %in% zip_focus,]) + tm_borders(col = "black") +
tm_polygons(col = var, palette = "Blues", alpha = .9) +
tm_layout(legend.text.size=0.8,
legend.title.size=.001,
legend.position = c("left","top"),
legend.bg.color = "gray100",
legend.bg.alpha=.2,
legend.frame='gray100',
legend.height= 2,
legend.width = 2,
legend.hist.width=.15,
legend.hist.height=.15,
legend.hist.bg.color="gray60",
legend.hist.bg.alpha=.5) +
# tm_shape(tract[tract$zip == 11212,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11203,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11228,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11229,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11219, ]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_layout(main.title = NA,
main.title.size = 1.8, fontfamily = "sans", main.title.position = 0.13)
}
tm_plot(tract,'frequency') # (8.71*5.54 inch)
View(meta)
tm_plot <- function(tract,var){
# tm_shape(tract[tract$zip %in% zip_focus,]) + tm_borders(col = "black") +
tm_shape(tract[tract$PO_NAME == 'Brooklyn',]) + tm_borders(col = "black") +
tm_polygons(col = var, palette = "Blues", alpha = .9) +
tm_layout(legend.text.size=0.8,
legend.title.size=.001,
legend.position = c("left","top"),
legend.bg.color = "gray100",
legend.bg.alpha=.2,
legend.frame='gray100',
legend.height= 2,
legend.width = 2,
legend.hist.width=.15,
legend.hist.height=.15,
legend.hist.bg.color="gray60",
legend.hist.bg.alpha=.5) +
# tm_shape(tract[tract$zip == 11212,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11203,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11228,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11229,]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
# tm_shape(tract[tract$zip == 11219, ]) +
# tm_fill(col = "gray85", alpha = .6) + tm_borders(col = "black") +
tm_layout(main.title = NA,
main.title.size = 1.8, fontfamily = "sans", main.title.position = 0.13)
}
tm_plot(tract,'frequency') # (8.71*5.54 inch)
tm_shape(tract[tract$PO_NAME == 'Brooklyn',]) + tm_borders(col = "black")
tm_shape(tract[tract$PO_NAME == 'Brooklyn',]) + tm_borders(col = "black")
tm_shape(tract[tract$COUNTY == 'Kings',]) + tm_borders(col = "black")
typeof(meta$CTY_FIPS)
tm_shape(tract[tract$CTY_FIPS == '047',]) + tm_borders(col = "black")
tm_shape(tract[tract$CTY_FIPS == 047,]) + tm_borders(col = "black")
